generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Campaign {
  id               String             @id @default(cuid())
  campaignName     String
  timeCreate       DateTime           @default(now())
  campaignType     CampaignType[]
  whatsappCampaign WhatsAppCampaign[]
  smsCampaign      SMSCampaign[]
  emailCampaign    EmailCampaign[]
}

model WhatsAppCampaign {
  id            String         @id @default(cuid())
  campaignID    String
  fromNumber    String
  mailbody      String // URL to file
  targeted      Int            @default(0)
  bounced       Int            @default(0)
  scheduled     DateTime
  status        CampaignStatus
  unsubscribed  Int            @default(0)
  regionsClicks Json
  ctalinks      CTALink[]
  campaign      Campaign       @relation(fields: [campaignID], references: [id])

  @@index([campaignID])
}

model SMSCampaign {
  id            String         @id @default(cuid())
  campaignID    String
  fromNumber    String
  SMSBody       String // URL to file
  targeted      Int            @default(0)
  bounced       Int            @default(0)
  scheduled     DateTime
  status        CampaignStatus
  unsubscribed  Int            @default(0)
  ctalinks      CTALink[]
  regionsClicks Json
  campaign      Campaign       @relation(fields: [campaignID], references: [id])

  @@index([campaignID])
}

model EmailCampaign {
  id            String         @id @default(cuid())
  campaignID    String
  subject       String
  fromMail      String
  mailbody      String // URL to file
  targeted      Int            @default(0)
  bounced       Int            @default(0)
  opened        Int            @default(0)
  mobile        Int            @default(0)
  desktop       Int            @default(0)
  scheduled     DateTime
  status        CampaignStatus
  unsubscribed  Int            @default(0)
  spamReports   Int            @default(0)
  ctalinks      CTALink[]
  regionsClicks Json
  campaign      Campaign       @relation(fields: [campaignID], references: [id])

  @@index([campaignID])
}

model CTALink {
  id                 String            @id @default(cuid())
  url                String
  clicks             Int               @default(0)
  mobile             Int               @default(0)
  desktop            Int               @default(0)
  regionsClicks      Json
  WhatsAppCampaign   WhatsAppCampaign? @relation(fields: [whatsAppCampaignId], references: [id])
  whatsAppCampaignId String?
  SMSCampaign        SMSCampaign?      @relation(fields: [sMSCampaignId], references: [id])
  sMSCampaignId      String?
  EmailCampaign      EmailCampaign?    @relation(fields: [emailCampaignId], references: [id])
  emailCampaignId    String?
}

enum CampaignType {
  EMAIL
  SMS
  WHATSAPP
}

enum CampaignStatus {
  PENDING
  SENT
  FAILED
  DRAFT
}

model UserBucket {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  mobile    BigInt   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
